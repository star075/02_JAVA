package advanced.ch02.sec12;

public class PrintfExample {
    public static void main(String[] args) {
        int value = 123;

        // %d : 정수 출력
        System.out.printf("상품의 가격: %d원\n", value);
        // → "상품의 가격:123원"

        // \t : 탭(들여쓰기) / %d : 정수
        System.out.printf("상품의 가격: \t%d원\n", value);
        // → "상품의 가격:    123원" (탭 간격만큼 띄움)

        // %d\t : 정수 출력 + 탭 문자
        System.out.printf("상품의 가격: %d\t원\n", value);
        // → "상품의 가격:123     원"

        // %6d : 총 6자리 확보해서 오른쪽 정렬 (빈칸은 공백으로 채움)
        // %06d : 총 6자리 확보해서 오른쪽 정렬 (빈칸은 0으로 채움)
        System.out.printf("상품의 가격: %06d원\n", value);
        // → "상품의 가격: 000123원"

        double area = 3.14159 * 10 * 10;

        // %d : 정수 출력, %.2f : 소수점 둘째자리까지 실수 출력
        System.out.printf("반지름이 %d인 원의 넓이: %.2f\n", 10, area);
        // → "반지름이 10인 원의 넓이: 314.16"

        String name = "홍길동";
        String job = "도적";

        // \t : 탭, %d: 정수, %s: 문자열
        System.out.printf("\t%d|%s\t|\t%s\n", 1, name, job);
        // → "    1|홍길동    |    도적"
    }
}

/*
📌 [Java printf 포맷팅 개념 정리]

✅ 기본 포맷 지정자
- %d  : 정수 (decimal)
- %f  : 실수 (float) → 기본 소수점 6자리까지 출력됨
- %s  : 문자열 (string)
- \t  : 탭 (들여쓰기)
- \n  : 줄바꿈 (new line)

✅ 자릿수 맞추기
- %6d  : 정수 6자리 확보 (남는 자리는 공백으로 채움, 오른쪽 정렬)
  → 예: 123 → "   123"
- %-6d : 정수 6자리 확보 (왼쪽 정렬)
  → 예: 123 → "123   "
- %06d : 정수 6자리 확보 (남는 자리는 **0**으로 채움)
  → 예: 123 → "000123" ✔️ ← 여기서 0붙이기 가능!

✅ 실수 출력 포맷
- %.2f : 소수점 둘째 자리까지 출력 (자동 반올림)
  → 예: 3.14159 → "3.14"

✅ 문자열 정렬
- %10s  : 10자리 확보, 오른쪽 정렬
- %-10s : 10자리 확보, 왼쪽 정렬

✅ 여러 개의 값을 한 줄에 출력 가능
System.out.printf("번호: %d | 이름: %s | 직업: %s\n", 1, "홍길동", "도적");

🧠 실전 팁:
- %0Nd 를 쓰면 N자리 확보 + 0으로 채우기 가능 (ex. %05d → 00001)
- 서식을 잘 조절하면 출력이 **깔끔하고 정렬된 형태로 표현 가능**

*/